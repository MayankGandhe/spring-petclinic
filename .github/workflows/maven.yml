# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-2
    

    - name: Build with Maven
      run: ./mvnw spring-boot:build-image
    - name: CheckImage
      run: docker images

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Deploy Application  
      run: |
        aws ssm send-command \
        --document-name "CD-Application" \
        --targets "Key=instanceids,Values=i-00cfe12638eb1784c" 

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: test
        IMAGE_TAG: 2.7.0-SNAPSHOT
      run: |
        docker tag spring-petclinic:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - name: Deploy Application  
      run: |
        aws ssm send-command \
        --document-name "CD-Application" \
        --instance-ids "i-00cfe12638eb1784c" 

